Module simple_imp:list

Builds on simple_imp:host

/*New Expressions and Translations*/
e ::= ...
    | nil(ty) /*we need the type to satisfy a host property*/
    | cons(e, e)
    | null(e)
    | head(e)
    | tail(e)
    | index(e, e) /*lst[i]*/
    | length(e)


--------------------------------------------- [Trans-Nil]
|{e}- nil(Ty) ~~>
      recBuild(addRecFieldExprs("null", true,
               endRecFieldExprs))


---------------------------------------------------------- [Trans-Cons]
|{e}- cons(E1, E2) ~~>
      recBuild(
         addRecFieldExprs("null", false,
         addRecFieldExprs("head", E1,
         addRecFieldExprs("tail", E2, endRecFieldExprs))))


------------------- [Trans-Null]
|{e}- null(E) ~~> E


------------------- [Trans-Head]
|{e}- head(E) ~~> E


------------------- [Trans-Tail]
|{e}- tail(E) ~~> E


/*Actually computing the length or index from records would require
  conditionals, so we'll take advantage of the lax translation
  constraints and translate to something unrelated to the actual
  value.*/
-------------------------------------------------- [Trans-Index]
|{e}- index(Lst, Index) ~~> and(null(Lst),
                                eq(num(0), Index))


--------------------- [Trans-Length]
|{e}- length(E) ~~> E



/*New Type and Translation*/
ty ::= ...
     | listTy(ty)


/*Strictly speaking, an empty list doesn't have the head or tail
  fields.  However, we don't have any translation constraints on types,
  so we can do whatever we want, and this is close.*/
----------------------------------------------- [Trans-ListTy]
|{ty}- listTy(T) ~~>
       recTy([("head", T), ("tail", listTy(T)),
              ("null", boolTy)])



/*New Value and Translation*/
value ::= ...
        | nilVal
        | consVal(value, value)


------------------------------------------------ [Trans-NilVal]
|{value}- nilVal ~~> recVal([("null", trueVal)])


--------------------------------------------- [Trans-ConsVal]
|{value}- consVal(Hd, Tl) ~~>
          recVal([("head", Hd), ("tail", Tl),
                  ("null", falseVal)])
